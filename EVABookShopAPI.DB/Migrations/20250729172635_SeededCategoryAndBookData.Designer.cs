// <auto-generated />
using EVABookShopAPI.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EVABookShopAPI.DB.Migrations
{
    [DbContext(typeof(EVABookShopAPIContext))]
    [Migration("20250729172635_SeededCategoryAndBookData")]
    partial class SeededCategoryAndBookData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EVABookShopAPI.DB.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BookPrice");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books", null, t =>
                        {
                            t.HasCheckConstraint("CK_Books_Price_Range", "[BookPrice] >= 1 AND [BookPrice] <= 1000");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "F. Scott Fitzgerald",
                            CategoryId = 1,
                            Description = "A story of the fabulously wealthy Jay Gatsby and his love for the beautiful Daisy Buchanan.",
                            Price = 12.99m,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Harper Lee",
                            CategoryId = 1,
                            Description = "The story of young Scout Finch and her father Atticus in a racially divided Alabama town.",
                            Price = 14.99m,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 3,
                            Author = "George Orwell",
                            CategoryId = 3,
                            Description = "A dystopian novel about totalitarianism and surveillance society.",
                            Price = 11.99m,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 4,
                            Author = "J.R.R. Tolkien",
                            CategoryId = 8,
                            Description = "A fantasy novel about Bilbo Baggins' journey with thirteen dwarves.",
                            Price = 16.99m,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Arthur Conan Doyle",
                            CategoryId = 4,
                            Description = "The first Sherlock Holmes novel introducing the famous detective.",
                            Price = 9.99m,
                            Title = "Sherlock Holmes: A Study in Scarlet"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Jane Austen",
                            CategoryId = 5,
                            Description = "A romantic novel of manners that follows the emotional development of Elizabeth Bennet.",
                            Price = 13.99m,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Walter Isaacson",
                            CategoryId = 6,
                            Description = "The biography of Apple's visionary co-founder and CEO.",
                            Price = 19.99m,
                            Title = "Steve Jobs"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Sun Tzu",
                            CategoryId = 2,
                            Description = "An ancient Chinese text on military strategy and tactics.",
                            Price = 8.99m,
                            Title = "The Art of War"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Dan Brown",
                            CategoryId = 9,
                            Description = "A mystery thriller novel about a murder in the Louvre Museum and a religious mystery.",
                            Price = 15.99m,
                            Title = "The Da Vinci Code"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Eckhart Tolle",
                            CategoryId = 10,
                            Description = "A guide to spiritual enlightenment and living in the present moment.",
                            Price = 17.99m,
                            Title = "The Power of Now"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Robert Kiyosaki",
                            CategoryId = 11,
                            Description = "A personal finance book that advocates financial literacy and investment.",
                            Price = 21.99m,
                            Title = "Rich Dad Poor Dad"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Robert C. Martin",
                            CategoryId = 12,
                            Description = "A handbook of agile software craftsmanship with practical examples.",
                            Price = 45.99m,
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Plato",
                            CategoryId = 13,
                            Description = "A philosophical work that explores the nature of justice and the ideal society.",
                            Price = 18.99m,
                            Title = "The Republic"
                        },
                        new
                        {
                            Id = 14,
                            Author = "T.S. Eliot",
                            CategoryId = 14,
                            Description = "A landmark modernist poem that captures the disillusionment of post-World War I society.",
                            Price = 12.99m,
                            Title = "The Waste Land"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Elizabeth Gilbert",
                            CategoryId = 15,
                            Description = "A memoir of a woman's journey of self-discovery through Italy, India, and Indonesia.",
                            Price = 16.99m,
                            Title = "Eat, Pray, Love"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Irma S. Rombauer",
                            CategoryId = 16,
                            Description = "A comprehensive cookbook with recipes and cooking techniques for all skill levels.",
                            Price = 35.99m,
                            Title = "The Joy of Cooking"
                        },
                        new
                        {
                            Id = 17,
                            Author = "E.H. Gombrich",
                            CategoryId = 17,
                            Description = "A comprehensive survey of the history of art from prehistoric times to the modern era.",
                            Price = 29.99m,
                            Title = "The Story of Art"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Bob Spitz",
                            CategoryId = 18,
                            Description = "A detailed biography of the most influential band in rock music history.",
                            Price = 24.99m,
                            Title = "The Beatles: The Biography"
                        },
                        new
                        {
                            Id = 19,
                            Author = "Michael Lewis",
                            CategoryId = 19,
                            Description = "The story of how the Oakland Athletics used statistical analysis to build a competitive baseball team.",
                            Price = 19.99m,
                            Title = "Moneyball"
                        },
                        new
                        {
                            Id = 20,
                            Author = "Antoine de Saint-Exupéry",
                            CategoryId = 20,
                            Description = "A poetic tale about a young prince who visits various planets in space.",
                            Price = 11.99m,
                            Title = "The Little Prince"
                        });
                });

            modelBuilder.Entity("EVABookShopAPI.DB.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CatOrder")
                        .HasColumnType("int");

                    b.Property<bool>("MarkedAsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.HasKey("Id");

                    b.HasIndex("CatName")
                        .IsUnique()
                        .HasDatabaseName("IX_Categories_CatName");

                    b.ToTable("Categories", "MasterSchema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatName = "Fiction",
                            CatOrder = 1,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CatName = "Non-Fiction",
                            CatOrder = 2,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CatName = "Science Fiction",
                            CatOrder = 3,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CatName = "Mystery",
                            CatOrder = 4,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CatName = "Romance",
                            CatOrder = 5,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            CatName = "Biography",
                            CatOrder = 6,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            CatName = "History",
                            CatOrder = 7,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            CatName = "Fantasy",
                            CatOrder = 8,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            CatName = "Thriller",
                            CatOrder = 9,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            CatName = "Self-Help",
                            CatOrder = 10,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            CatName = "Business",
                            CatOrder = 11,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 12,
                            CatName = "Technology",
                            CatOrder = 12,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 13,
                            CatName = "Philosophy",
                            CatOrder = 13,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 14,
                            CatName = "Poetry",
                            CatOrder = 14,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 15,
                            CatName = "Travel",
                            CatOrder = 15,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 16,
                            CatName = "Cooking",
                            CatOrder = 16,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 17,
                            CatName = "Art",
                            CatOrder = 17,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 18,
                            CatName = "Music",
                            CatOrder = 18,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 19,
                            CatName = "Sports",
                            CatOrder = 19,
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 20,
                            CatName = "Children's Books",
                            CatOrder = 20,
                            MarkedAsDeleted = false
                        });
                });

            modelBuilder.Entity("EVABookShopAPI.DB.Models.Book", b =>
                {
                    b.HasOne("EVABookShopAPI.DB.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EVABookShopAPI.DB.Models.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
